{"version":3,"file":"index.js","sources":["../dist-src/components/common/host.js","../dist-src/components/controls/index.js","../dist-src/components/fieldset/index.js","../dist-src/components/field/index.js","../dist-src/components/data/index.js","../dist-src/components/element/index.js","../dist-src/components/font/index.js","../dist-src/components/scale/index.js","../dist-src/components/swatch/index.js","../dist-src/components/index.js","../dist-src/index.js"],"sourcesContent":["import { html } from 'hybrids';\nexport default html`\n  <style>\n    :host {\n      display: block;\n    }\n    :host[hidden] {\n      display: none;\n    }\n  </style>\n`;","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  render: () => html`\n    ${hostInit}\n    <style>\n      :host {\n        --form-flow: column wrap;\n        --form-font: sans-serif;\n        --form-font-size: 1.25em;\n        --form-margins: 0 0 1.25em 0;\n\n        --button-bg: white;\n        --button-fg: black;\n        --button-font-size: 1.25em;\n        --button-border: 4px solid black;\n        --button-radius: 0.5em;\n        --button-padding: 1em;\n\n        /* Internal qs-fieldset theming */\n        --group-background: white;\n        --group-border: 2px solid black;\n        --group-padding: 0.25em;\n        --group-label-font-size: var(--form-font-size);\n        --group-label-padding: 0 0.75em;\n        --group-label-weight: 700;\n\n        --group-option-label-font-size: var(--form-font-size);\n        --group-option-label-weight: 400;\n        --group-option-input-border: 4px solid black;\n        --group-option-input-font-size: var(--group-option-label-font-size);\n        --group-option-input-radius: 0.5em;\n        --group-option-input-padding: 0.75em;\n\n        /* Internal qs-field theming */\n        --field-label-font-size: var(--form-font-size);\n        --field-label-weight: 700;\n        --field-label-margin: 0.5em 0 0 0;\n\n        --field-input-background: white;\n        --field-input-border: 4px solid black;\n        --field-input-font-size: var(--form-font-size);\n        --field-input-radius: 0.5em;\n        --field-input-padding: 0.75em;\n        --field-color-height: 3em;\n      }\n\n      form {\n        display: flex;\n        flex-flow: var(--form-flow);\n        font-family: var(--form-font);\n        margin: var(--form-margins);\n      }\n\n      ::slotted(qs-fieldset) {\n        --fieldset-background: var(--group-background);\n        --fieldset-border: var(--group-border);\n        --fieldset-padding: var(--group-padding);\n        --fieldset-font: var(--form-font);\n        --legend-font-size: var(--group-label-font-size);\n        --legend-padding: var(--group-label-padding);\n        --legend-weight: var(--group-label-weight);\n        --option-label-weight: var(--group-option-label-weight);\n        --option-label-font-size: var(--group-option-label-font-size);\n        --option-input-border: var(--group-option-input-border);\n        --option-input-font-size: var(--group-option-input-font-size);\n        --option-input-radius: var(--group-option-input-radius);\n        --option-input-padding: var(--group-option-input-padding);\n      }\n\n      ::slotted(qs-field) {\n        --field-font: var(--form-font);\n        --label-font-size: var(--field-label-font-size);\n        --label-margin: var(--field-label-margin);\n        --label-weight: var(--field-label-weight);\n        --input-background: var(--field-input-background);\n        --input-border: var(--field-input-border);\n        --input-font-size: var(--field-input-font-size);\n        --input-radius: var(--field-input-radius);\n        --input-padding: var(--field-input-padding);\n        --color-input-height: var(--field-color-height);\n      }\n\n      ::slotted(button) {\n        background: var(--button-bg);\n        border: var(--button-border);\n        border-radius: var(--button-radius);\n        color: var(--button-fg);\n        font-size: var(--button-font-size);\n        padding: var(--button-padding);\n      }\n    </style>\n    <form action=\"\">\n      <slot></slot>\n    </form>\n  `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  group: 'The Legend of Fieldset',\n  render: ({\n    group\n  }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --fieldset-background: white;\n        --fieldset-border: 2px solid black;\n        --fieldset-font: sans-serif;\n        --fieldset-padding: 1em;\n\n        --legend-font-size: 1.25em;\n        --legend-padding: 0 0.5em;\n        --legend-weight: 700;\n\n        /* Internal qs-field options */\n        --option-label-font-size: 1em;\n        --option-label-weight: 400;\n        --option-input-border: 4px solid black;\n        --option-input-font-size: var(--label-font-size);\n        --option-input-radius: 0.5em;\n        --option-input-padding: 0.75em;\n\n        --option-color-height: 3em;\n\n        font-family: var(--fieldset-font);\n      }\n\n      fieldset {\n        background: var(--fieldset-background);\n        border: var(--fieldset-border);\n        padding: var(--fieldset-padding);\n      }\n\n      legend {\n        font-size: var(--legend-font-size);\n        font-weight: var(--legend-weight);\n        padding: var(--legend-padding);\n      }\n\n      ::slotted(qs-field) {\n        --label-weight: var(--option-label-weight);\n        --label-font-size: var(--option-label-font-size);\n\n        --input-border: 4px solid black;\n        --input-font-size: var(--label-font-size);\n        --input-radius: 0.5em;\n        --input-padding: 0.75em;\n\n        --color-input-height: 3em;\n\n        display: inline-block;\n      }\n    </style>\n    <fieldset>\n      <legend>${group}</legend>\n      <slot></slot>\n    </fieldset>\n  `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  label: 'Read the Label',\n  labelPos: 'top',\n  labelFor: '',\n  render: ({\n    label,\n    labelPos,\n    labelFor\n  }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --field-font: sans-serif;\n\n        --label-font-size: 1.25em;\n        --label-weight: 700;\n\n        --input-background: white;\n        --input-border: 4px solid black;\n        --input-font-size: var(--label-font-size);\n        --input-radius: 0.5em;\n        --input-padding: 0.75em;\n\n        --color-input-height: 3em;\n\n        font-family: var(--field-font);\n      }\n\n      label {\n        display: block;\n        font-size: var(--label-font-size);\n        font-weight: var(--label-weight);\n      }\n\n      ::slotted(input[type='file']),\n      ::slotted(input[type='text']),\n      ::slotted(input[type='number']) {\n        background: var(--input-background);\n        border: var(--input-border);\n        box-sizing: border-box;\n        border-radius: var(--input-radius);\n        font-size: var(--input-font-size);\n        padding: var(--input-padding);\n        width: 100%;\n      }\n\n      ::slotted(input[type='range']) {\n        width: 100%;\n      }\n\n      ::slotted(input[type='color']) {\n        background: transparent;\n        box-sizing: border-box;\n        border: none;\n        border-radius: 0;\n        padding: 0;\n        width: 100%;\n        height: var(--color-input-height);\n      }\n    </style>\n    ${labelPos === 'top' && html`\n        <style>\n          :host {\n            --label-margin: 0.5em 0 0 0;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margin);\n          }\n        </style>\n        <label for=\"${labelFor}\">${label}</label>\n        <slot></slot>\n      `}\n    ${labelPos === 'right' && html`\n        <style>\n          :host {\n            --label-margin: 0 0.25em 0 0;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margin);\n          }\n        </style>\n        <label><slot></slot> ${label}</label>\n      `}\n    ${labelPos === 'bottom' && html`\n        <style>\n          :host {\n            --label-margin: 0 0 0.5em 0;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margin);\n          }\n        </style>\n        <slot></slot>\n        <label for=\"${labelFor}\">${label}</label>\n      `}\n    ${labelPos === 'left' && html`\n        <style>\n          :host {\n            --label-margin: 0 0 0 0.5em;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margin);\n          }\n        </style>\n        <label>${label} <slot></slot></label>\n      `}\n  `\n};","import { html } from 'hybrids';\nimport prism from 'prismjs';\nimport hostInit from \"../common/host.js\";\nexport default {\n  data: {},\n  variable: 'output',\n  label: 'code',\n  format: ({\n    data\n  }) => JSON.stringify(data, null, 2),\n  output: ({\n    format,\n    variable\n  }) => prism.highlight(`const ${variable} = ${format};`, prism.languages.javascript, 'javascript'),\n  render: ({\n    data,\n    variable,\n    label,\n    output\n  }) => html`\n      ${hostInit}\n      <style>\n        :host {\n          --font: monospace;\n          --border: 4px solid black;\n          --font-size: 1.25em;\n          --padding: 1em;\n\n          --theme-bg: white;\n          --theme-padding: var(--padding);\n          --theme-keyword-color: crimson;\n          --theme-string-color: forestgreen;\n\n          font-family: var(--font);\n          font-size: var(--font-size);\n        }\n\n        pre {\n          background: var(--theme-bg);\n          border: var(--border);\n          padding: var(--theme-padding);\n        }\n\n        /* prism theme */\n        .token.keyword {\n          color: var(--theme-keyword-color);\n          font-weight: 700;\n        }\n\n        .token.string {\n          color: var(--theme-string-color);\n        }\n      </style>\n      <pre><code innerHTML=\"${output}\"></code></pre>\n    `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  label: 'base',\n  value: '1rem',\n  render: ({\n    label,\n    value\n  }) => html`\n      ${hostInit}\n      <style>\n        :host {\n          --element-color: black;\n          --element-margin: 0 0 0.5em 0;\n          --element-width: 100%;\n\n          --label-size: 1rem;\n\n          --flex-flow: column nowrap;\n          --align-items: center;\n\n          display: flex;\n          flex-flow: var(--flex-flow);\n          align-items: var(--align-items);\n        }\n\n        div {\n          background: var(--element-color);\n          margin: var(--element-margin);\n          width: var(--element-width);\n          height: ${value};\n        }\n\n        code {\n          font-size: var(--label-size);\n        }\n      </style>\n      <div></div>\n      <code>${label}: ${value}</code>\n    `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  label: 'Sans',\n  stack: 'sans-serif',\n  render: ({\n    label,\n    stack\n  }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --label-bg: black;\n        --label-fg: white;\n        --label-padding: 1em;\n        --label-size: 1.25em;\n        --label-font: sans-serif;\n\n        --value-font: monospace;\n        --value-opacity: 0.8;\n\n        --content-border: 4px solid black;\n        --content-padding: calc(var(--label-padding) / 1.5);\n        --content-size: calc(var(--label-size) * 1.25);\n      }\n\n      .label {\n        background: var(--label-bg);\n        color: var(--label-fg);\n        padding: var(--label-padding);\n        font-family: var(--label-font);\n        font-size: var(--label-size);\n        font-weight: 700;\n      }\n\n      .label > code {\n        opacity: var(--value-opacity);\n        font-family: var(--value-font);\n        font-weight: 400;\n      }\n\n      .content {\n        border: var(--content-border);\n        padding: var(--content-padding);\n        font-family: ${stack};\n        font-size: var(--content-size);\n      }\n    </style>\n    <div class=\"label\">${label}: <code>${stack}</code></div>\n    <div class=\"content\">The quick brown fox jumps over the lazy dog.</div>\n  `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  label: 'base',\n  value: '1rem',\n  content: 'The quick brown fox jumps over the lazy dog.',\n  render: ({\n    label,\n    value,\n    content\n  }) => html`\n      ${hostInit}\n      <style>\n        :host {\n          --label-bg: black;\n          --label-fg: white;\n\n          --label-font: sans-serif;\n          --label-size: 1.25em;\n          --label-padding: 1em;\n\n          --value-font: monospace;\n          --value-opacity: 0.8;\n\n          --content-bg: var(--label-fg);\n          --content-fg: var(--label-bg);\n          --content-border: 4px solid black;\n          --content-padding: var(--label-padding);\n        }\n\n        .label {\n          background: var(--label-bg);\n          color: var(--label-color);\n          display: inline-block;\n          font-family: var(--label-font);\n          font-size: var(--label-size);\n          padding: var(--label-padding);\n        }\n\n        .label > code {\n          opacity: var(--value-opacity);\n          font-family: var(--value-font);\n        }\n\n        .content {\n          border: var(--content-border);\n          background: var(--content-bg);\n          color: var(--content-fg);\n          padding: var(--content-padding);\n          font-family: var(--font-system-serif);\n          font-size: ${value};\n        }\n      </style>\n      <div class=\"label\">${label}: <code>${value}</code></div>\n      <div class=\"content\">${content}</div>\n    `\n};","import { html } from 'hybrids';\nimport hostInit from \"../common/host.js\";\nexport default {\n  value: '#aaaaaa',\n  render: ({\n    value\n  }) => html`\n      ${hostInit}\n      <style>\n        :host {\n          --border-color: black;\n          --border-width: 4px;\n          --border-radius: 0;\n\n          --swatch-padding: 1.5em;\n\n          --value-font: monospace;\n          --value-padding: calc(var(--swatch-padding) / 2);\n          --value-size: 1rem;\n        }\n\n        div {\n          background: ${value};\n          border: var(--border-width) solid var(--border-color);\n          border-radius: var(--border-radius);\n          padding: var(--swatch-padding);\n        }\n\n        code {\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: calc(var(--border-radius) / 2);\n          display: block;\n          font-family: var(--value-font);\n          font-size: var(--value-size);\n          padding: var(--value-padding);\n          text-align: center;\n        }\n      </style>\n      <div>\n        <code>${value}</code>\n      </div>\n    `\n};","// Control Elements\nimport QSControls from \"./controls/index.js\";\nimport QSFieldset from \"./fieldset/index.js\";\nimport QSField from \"./field/index.js\"; // Display Elements\n\nimport QSData from \"./data/index.js\";\nimport QSElement from \"./element/index.js\";\nimport QSFont from \"./font/index.js\";\nimport QSScale from \"./scale/index.js\";\nimport QSSwatch from \"./swatch/index.js\";\nexport { QSControls, QSFieldset, QSField, QSData, QSElement, QSFont, QSScale, QSSwatch };","import '@webcomponents/webcomponentsjs/webcomponents-bundle.js';\nimport { define } from 'hybrids';\nimport * as components from \"./components/index.js\";\ndefine({ ...components\n});"],"names":["html","render","hostInit","group","label","labelPos","labelFor","data","variable","format","JSON","stringify","output","prism","highlight","languages","javascript","value","stack","content","define","components"],"mappings":"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"}