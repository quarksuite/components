{"version":3,"file":"quarksuite.es.js","sources":["../src/components/common/host.js","../src/components/controls/index.js","../src/components/fieldset/index.js","../src/components/field/index.js","../src/components/data/index.js","../src/components/element/index.js","../src/components/font/index.js","../src/components/scale/index.js","../src/index.js","../src/components/swatch/index.js"],"sourcesContent":["import { html } from 'hybrids';\n\nexport default html`\n  <style>\n    :host {\n      display: block;\n    }\n    :host[hidden] {\n      display: none;\n    }\n  </style>\n`;\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  render: () => html`\n    ${hostInit}\n    <style>\n      :host {\n        --form-flow: column wrap;\n        --form-font: sans-serif;\n        --form-margins: 0 0 1.25em 0;\n\n        --button-bg: white;\n        --button-fg: black;\n        --button-font-size: 1.25em;\n        --button-border: 4px solid black;\n        --button-radius: 0.5em;\n        --button-padding: 1em;\n      }\n\n      form {\n        display: flex;\n        flex-flow: var(--form-flow);\n        font-family: var(--form-font);\n        margin: var(--form-margins);\n      }\n\n      ::slotted(button) {\n        background: var(--button-bg);\n        border: var(--button-border);\n        border-radius: var(--button-radius);\n        color: var(--button-fg);\n        font-size: var(--button-font-size);\n        padding: var(--button-padding);\n      }\n    </style>\n    <form action=\"\">\n      <slot></slot>\n    </form>\n  `\n};\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  group: 'The Legend of Fieldset',\n  render: ({ group }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --fieldset-border: 2px solid black;\n        --fieldset-font: sans-serif;\n\n        --legend-padding: 0 0.5em;\n        --legend-weight: 700;\n\n        font-family: var(--fieldset-font);\n      }\n\n      fieldset {\n        border: var(--fieldset-border);\n      }\n\n      legend {\n        font-weight: var(--legend-weight);\n        padding: var(--legend-padding);\n      }\n\n      ::slotted(qs-field) {\n        display: inline-block;\n      }\n    </style>\n    <fieldset>\n      <legend>${group}</legend>\n      <slot></slot>\n    </fieldset>\n  `\n};\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  label: 'Read the Label',\n  labelPos: 'top',\n  id: 'id',\n  render: ({ label, labelPos, id }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --field-font: sans-serif;\n        --label-weight: 700;\n\n        --input-border: 4px solid black;\n        --input-radius: 0.5em;\n        --input-padding: 0.75em;\n\n        --color-input-height: 3em;\n\n        font-family: var(--field-font);\n      }\n\n      label {\n        display: block;\n        font-weight: var(--label-weight);\n      }\n\n      ::slotted(input[type='text']),\n      ::slotted(input[type='number']) {\n        border: var(--input-border);\n        box-sizing: border-box;\n        border-radius: var(--input-radius);\n        padding: var(--input-padding);\n        width: 100%;\n      }\n\n      ::slotted(input[type='color']) {\n        background: transparent;\n        box-sizing: border-box;\n        border: none;\n        border-radius: 0;\n        padding: 0;\n        width: 100%;\n        height: var(--color-input-height);\n      }\n    </style>\n    ${labelPos === 'top' &&\n      html`\n        <style>\n          :host {\n            --label-margins: 0.5em 0 0 0;\n          }\n          ::slotted(input) {\n            margin: var(--label-margins);\n          }\n        </style>\n        <label for=\"${id}\">${label}</label>\n        <slot></slot>\n      `}\n    ${labelPos === 'right' &&\n      html`\n        <style>\n          :host {\n            --label-margins: 0 0.25em 0 0;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margins);\n          }\n        </style>\n        <label><slot></slot>${label}</label>\n      `}\n    ${labelPos === 'bottom' &&\n      html`\n        <style>\n          :host {\n            --label-margins: 0 0 0.5em 0;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margins);\n          }\n        </style>\n        <slot></slot>\n        <label for=\"${id}\">${label}</label>\n      `}\n    ${labelPos === 'left' &&\n      html`\n        <style>\n          :host {\n            --label-margins: 0 0 0 0.5em;\n          }\n\n          ::slotted(input) {\n            margin: var(--label-margins);\n          }\n        </style>\n        <label>${label}<slot></slot></label>\n      `}\n  `\n};\n","import { html } from 'hybrids';\nimport prism from 'prismjs';\n\nimport hostInit from '../common/host';\n\nexport default {\n  data: {},\n  variable: 'output',\n  filename: 'system.js',\n  format: ({ data }) => JSON.stringify(data, null, 2),\n  output: ({ format, variable }) =>\n    prism.highlight(\n      `const ${variable} = ${format};`,\n      prism.languages.javascript,\n      'javascript'\n    ),\n  render: ({ data, variable, filename, output }) =>\n    html`\n      ${hostInit}\n      <style>\n        :host {\n          --label-bg: black;\n          --label-fg: white;\n          --label-padding: 1em;\n          --code-font: monospace;\n          --code-border: 4px solid black;\n          --font-size: 1.25em;\n\n          --theme-bg: white;\n          --theme-padding: var(--label-padding);\n          --theme-keyword-color: red;\n          --theme-string-color: lime;\n\n          font-family: var(--code-font);\n          font-size: var(--font-size);\n        }\n        .filename,\n        .output-code {\n          margin: 0;\n        }\n\n        .filename {\n          background: var(--label-bg);\n          color: var(--label-fg);\n          display: inline-block;\n          padding: var(--label-padding);\n        }\n        .output-code {\n          background: var(--theme-bg);\n          border: var(--code-border);\n          padding: var(--theme-padding);\n        }\n\n        /* prism theme */\n        .token.keyword {\n          color: var(--theme-keyword-color);\n          font-weight: 700;\n        }\n\n        .token.string {\n          color: var(--theme-string-color);\n        }\n      </style>\n      <div class=\"filename\"><code>${filename}</code></div>\n      <pre class=\"output-code\"><code innerHTML=\"${output}\"></code></pre>\n    `\n};\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  label: 'base',\n  value: '1rem',\n  render: ({ label, value }) =>\n    html`\n      ${hostInit}\n      <style>\n        :host {\n          --element-color: black;\n          --element-margin: 0 0 0.5em 0;\n          --element-width: 100%;\n\n          --label-size: 1rem;\n\n          --flex-flow: column nowrap;\n          --align-items: center;\n\n          display: flex;\n          flex-flow: var(--flex-flow);\n          align-items: var(--align-items);\n        }\n\n        div {\n          background: var(--element-color);\n          margin: var(--element-margin);\n          width: var(--element-width);\n          height: ${value};\n        }\n\n        code {\n          font-size: var(--label-size);\n        }\n      </style>\n      <div></div>\n      <code>${label}: ${value}</code>\n    `\n};\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  label: 'Sans',\n  stack: 'sans-serif',\n  render: ({ label, stack }) => html`\n    ${hostInit}\n    <style>\n      :host {\n        --label-bg: black;\n        --label-fg: white;\n        --label-padding: 1em;\n        --label-size: 1.25em;\n        --label-font: sans-serif;\n\n        --value-font: monospace;\n        --value-opacity: 0.8;\n\n        --content-border: 4px solid black;\n        --content-padding: calc(var(--label-padding) / 1.5);\n        --content-size: calc(var(--label-size) * 1.25);\n      }\n\n      .label {\n        background: var(--label-bg);\n        color: var(--label-fg);\n        padding: var(--label-padding);\n        font-family: var(--label-font);\n        font-size: var(--label-size);\n        font-weight: 700;\n      }\n\n      .label > code {\n        opacity: var(--value-opacity);\n        font-family: var(--value-font);\n        font-weight: 400;\n      }\n\n      .content {\n        border: var(--content-border);\n        padding: var(--content-padding);\n        font-family: ${stack};\n        font-size: var(--content-size);\n      }\n    </style>\n    <div class=\"label\">${label}: <code>${stack}</code></div>\n    <div class=\"content\">The quick brown fox jumps over the lazy dog.</div>\n  `\n};\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  label: 'base',\n  value: '1rem',\n  content: 'The quick brown fox jumps over the lazy dog.',\n  render: ({ label, value, content }) =>\n    html`\n      ${hostInit}\n      <style>\n        :host {\n          --label-bg: black;\n          --label-fg: white;\n\n          --label-font: sans-serif;\n          --label-size: 1.25em;\n          --label-padding: 1em;\n\n          --value-font: monospace;\n          --value-opacity: 0.8;\n\n          --content-bg: var(--label-fg);\n          --content-fg: var(--label-bg);\n          --content-border: 4px solid black;\n          --content-padding: var(--label-padding);\n        }\n\n        .label {\n          background: var(--label-bg);\n          color: var(--label-color);\n          display: inline-block;\n          font-family: var(--label-font);\n          font-size: var(--label-size);\n          padding: var(--label-padding);\n        }\n\n        .label > code {\n          opacity: var(--value-opacity);\n          font-family: var(--value-font);\n        }\n\n        .content {\n          border: var(--content-border);\n          background: var(--content-bg);\n          color: var(--content-fg);\n          padding: var(--content-padding);\n          font-family: var(--font-system-serif);\n          font-size: ${value};\n        }\n      </style>\n      <div class=\"label\">${label}: <code>${value}</code></div>\n      <div class=\"content\">${content}</div>\n    `\n};\n","import '@webcomponents/webcomponentsjs/webcomponents-bundle.js';\nimport { define } from 'hybrids';\n\nimport * as components from '../src/components';\n\ndefine({ ...components });\n","import { html } from 'hybrids';\n\nimport hostInit from '../common/host';\n\nexport default {\n  value: '#aaaaaa',\n  render: ({ value }) =>\n    html`\n      ${hostInit}\n      <style>\n        :host {\n          --border-color: black;\n          --border-width: 4px;\n          --border-radius: 0;\n\n          --swatch-padding: 1.5em;\n\n          --value-font: monospace;\n          --value-padding: calc(var(--swatch-padding) / 2);\n          --value-size: 1rem;\n        }\n\n        div {\n          background: ${value};\n          border: var(--border-width) solid var(--border-color);\n          border-radius: var(--border-radius);\n          padding: var(--swatch-padding);\n        }\n\n        code {\n          background: rgba(255, 255, 255, 0.8);\n          border-radius: calc(var(--border-radius) / 2);\n          display: block;\n          font-family: var(--value-font);\n          font-size: var(--value-size);\n          padding: var(--value-padding);\n          text-align: center;\n        }\n      </style>\n      <div>\n        <code>${value}</code>\n      </div>\n    `\n};\n"],"names":["html","render","hostInit","group","label","labelPos","id","data","variable","filename","format","JSON","stringify","output","prism","highlight","languages","javascript","value","stack","content","define","Object"],"mappings":"mRAEeA,64BCEA,CACbC,yBAAcD,IACVE,mnBCFS,CACbC,MAAO,yBACPF,0BAAuBD,IACnBE,6kECHS,CACbE,MAAO,iBACPC,SAAU,MACVC,GAAI,KACJL,4DAAqCD,IACjCE,EAuCa,QAAbG,GACAL,IASgBM,EAAOF,GAGV,UAAbC,GACAL,IAUwBI,GAEX,WAAbC,GACAL,IAWgBM,EAAOF,GAEV,SAAbC,GACAL,IAUWI,myCC9FF,CACbG,KAAM,GACNC,SAAU,SACVC,SAAU,YACVC,0BAAsBC,KAAKC,iBAAgB,KAAM,IACjDC,0BACEC,EAAMC,iDAEJD,EAAME,UAAUC,WAChB,eAEJhB,0BACED,IACIE,ivBCdO,CACbE,MAAO,OACPc,MAAO,OACPjB,wCACED,IACIE,EAqBYgB,UAQIA,qpCClCT,CACbd,MAAO,OACPe,MAAO,aACPlB,wCAA8BD,IAC1BE,EAmCiBiB,UAIkBA,owCC3C1B,CACbf,MAAO,OACPc,MAAO,OACPE,QAAS,+CACTnB,wCACED,IACIE,EAuCegB,UAGoBA,o8BC/C3CG,EAAOC,uGCDQ,CACbJ,MAAO,UACPjB,wCACED,IACIE,EAegBgB,EAiBRA"}